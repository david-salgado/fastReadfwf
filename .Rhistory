n <- nchar(vardepu)
paraEdit <- names(dt)[substr(names(dt), 1, n) == vardepu]
NombreEdit <- substr(paraEdit, n+2, nchar(paraEdit))
NombreEdit
dt[, NombreEdit := NombreEdit]
dt
todosNames <- names(dt)
oldNames <- todosNames[substr(todosNames, nchar(todosNames) - nchar(NombreEdit) + 1, nchar(todosNames)) == NombreEdit]
oldNames
newNames <- paste0(substr(oldNames, 1, nchar(oldNames) - nchar(NombreEdit)), "[NombreEdit]")
newNames
melt_StQ(dt, DD)
melt_StQ(dt, DD)->dt_stQ
dt_stQ
dt
dt[, NORDEN_ID := A7_2a]
melt_StQ(dt, DD)->dt_stQ
dt_stQ
dt_stQ[IDDD == 'Parametro']
dt
setnames(dt, oldNames, newNames)
dt
oldNames
newNames
dt
melt_StQ(dt, DD)->dt_stQ
dt_stQ
dt_stQ[IDDD == 'Parametro']
dt
dcast_StQ(dt_stQ)
dcast_StQ(dt_stQ, UnitNames = TRUE)
dt
##ToDo: Actualizar melt_StQ para automatizar este cambio de nombre
## Este cambio está sujeto a depurar solo una variable CNO_AS
origVar <- c('MarcaValidacion_CNO_AS', 'ProbError_CNO_AS', 'MomError_CNO_AS', 'Prioridad_CNO_AS')
sapply(origVar, function(x){strsplit(x, split = '_', fixed = TRUE)[[1]][[1]]})
newVar <- paste0(
sapply(origVar, function(x){strsplit(x, split = '_', fixed = TRUE)[[1]][[1]]}),
'_[NombreEdit]')
newVar
rawData[['cue_adulto']][
, NORDEN_ID := A7_2a]
##ToDo: Actualizar melt_StQ para automatizar este cambio de nombre
## Este cambio está sujeto a depurar solo una variable CNO_AS
origVar <- c('MarcaValidacion_CNO_AS', 'ProbError_CNO_AS',
'MomError_CNO_AS', 'Prioridad_CNO_AS')
newVar <- paste0(
sapply(origVar, function(x){strsplit(x, split = '_', fixed = TRUE)[[1]][[1]]}),
'_[NombreEdit]')
setnames(rawData[['cue_adulto']], origVar, newVar)
##
rawData[['cue_adulto']][
, NombreEdit := 'CNO_AS']
rawData[[1]]
rawData[[1]][, `MarcaValidacion_[NombreEdit]` := '0']
rawData[[1]]
dt_stQ <- melt_StQ(dt, DD)
dt_stQ <- melt_StQ(rawData[[1]], DD)
dt_stQ[IDDD == 'Parametro']
dcast_StQ(dt_stQ[IDDD == 'Parametro'])
dcast_StQ(dt_stQ, UnitNames = TRUE)
dcast_StQ(dt_stQ[IDDD == 'Parametro'])
dcast_StQ(dt_stQ[IDDD == 'Parametro'], UnitNames = TRUE)
f <- copy(rawData[[2]])
s <- schema[[2]]
s2 <- xlsxToSchema(file.path(schemaPath, 'E54088.DisRegistro_V1.AA2019.ftp_hogar2.xlsx'), sheet = 'Schema')
s2 <- xlsxToSchema(file.path(schemaPath, 'E54088.DisRegistro_V1.AA2019.ftp_hogar2.xlsx'), sheet = 'Schema'); validateValues(f, s2)
s2 <- xlsxToSchema(file.path(schemaPath, 'E54088.DisRegistro_V1.AA2019.ftp_hogar2.xlsx'), sheet = 'Schema')
s2 <- xlsxToSchema(file.path(schemaPath, 'E54088.DisRegistro_V1.AA2019.ftp_hogar2.xlsx'), sheet = 'Schema'); validateValues(f, s2)
names(rawData)
rawData[['cue_hogar']] <-
rawData[['cue_hogar']][rawData[['seccion']][, c('CODSEC', 'ESTRATO'), with = FALSE], on = 'CODSEC']
rawData[[2]]
rawData <- lapply(fileNames, function(filename){
url <- fileURLs[[filename]]
tempFile <- file.path(tempdir(), filename)
download.file(url = url, destfile = tempFile)
fread_fwf(tempFile, schema[[filename]],
outFormat = 'data.table', perl = TRUE)
})
names(rawData) <- fileNames
list.files('Z:')
file.copy('Z:/E54088.NombresVariables_V1.xlsx', 'C:/E54088.NombresVariables_V1.xlsx')
devtools::install_github('david-salgado/RepoReadWrite')
library(RepoReadWrite)
RepoReadWrite::is.validXLSX('C:/E54088.NombresVariables_V1.xlsx')
RepoReadWrite::is.validXLS('C:/E54088.NombresVariables_V1.xlsx')
RepoReadWrite::ValidateXLS('C:/E54088.NombresVariables_V1.xlsx')
file.copy('C:/E54088.NombresVariables_V1.xlsx', 'Z:/E54088.NombresVariables_V1.xlsx')
file.copy('C:/E54088.NombresVariables_V1.xlsx', 'Z:/E54088.NombresVariables_V1.xlsx', overwrite = TRUE)
file.remove('Z:/E54088.DD_V1')
rm(list = ls())
devtools::load_all(".")
library(fastReadfwf)
search()
library(fastReadfwf)
library(data.table)
library(GGally)
#LECTURA DISEÑO DE REGISTRO
setwd("N:/UDMTD/LasaiBarreñada")
filenamePID <- "ICNPID_Schema.xlsx"
dataFile_PID <- "pid112001.txt"
stSchema_PID <- xlsxToSchema(filenamePID, sheetname = 'Schema', lang = 'en')
stSchema_PID
data_PID_st <- fread_fwf(dataFile_PID, stSchema_PID, outFormat = 'data.table', convert = FALSE, perl = T, encoding = "UTF-8")
data_PID_st <- fread_fwf(dataFile_PID, stSchema_PID, outFormat = 'data.table', convert = FALSE, perl = F, encoding = "UTF-8")
fastReadfwf::validateValues(data_PID_st, stSchema_PID)
stSchema_PID <- xlsxToSchema(filenamePID, sheetname = 'Schema', lang = 'en')
data_PID_st <- fread_fwf(dataFile_PID, stSchema_PID, outFormat = 'data.table', convert = FALSE, perl = F, encoding = "UTF-8")
validateValues(data_PID_st, stSchema_PID)
stSchema_PID
path <- system.file('extdata', package = 'fastReadfwf')
stSchema <- fastReadfwf::xlsxToSchema(file.path(path, 'SchemaSNHS.xlsx'), 'stSchema')
str(stSchema)
stSchema
stSchema[1:5, 1:5]
stSchema@df[1:5, 1:5]
stSchema@df[1:5, 1:6]
data.DT <- fread_fwf(
file.path(path, 'MicroDataSNHS.txt'), stSchema, outFormat = 'data.table', perl = TRUE)
devtools::load_all(".")
rm(list = c(".N"))
devtools::load_all(".")
data.DT <- fread_fwf(
a
data.DT <- fread_fwf(
file.path(path, 'MicroDataSNHS.txt'), stSchema, outFormat = 'data.table', perl = TRUE)
data.DT
stSchema
str(stSchema)
stSchema@df
View(stSchema@df)
path_data <- 'N:/UDMTD/UDMTD16/data'
path_src  <- 'N:/UDMTD/UDMTD16/code/src'
####  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: ####
####                  LOAD PACKAGES AND FUNCTIONS                           ####
library(data.table)
#library(pROC)
library(ggplot2)
#library(viridis) #customize ggplots
#library(gridExtra) #customize ggroc
library(latex2exp)
tru.dt <- readRDS(file = file.path(path_data, 'FF_2011.dt.rds'))
raw.dt <- readRDS(file = file.path(path_data, 'FG_2011.dt.rds'))
raw.dt[, cod := paste(CODSEC, VIV, HOGAR, NORDEN_ID, sep = "")]
raw.dt
tru.dt[, cod := paste(CODSEC, VIV, HOGAR, NORDEN_ID, sep = "")]
tru.dt
raw.dt[!tru.dt, on = 'cod']
raw.dt[tru.dt, on = 'cod']
dat.dt <- raw.dt[tru.dt, on = 'cod']
dat.dt
names(raw.dt)
#CREACI?N DE LA NUEVA BASE DE DATOS
####  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: ####
####                           SET PATHS                                    ####
path_data <- 'C:/Users/Tester/Desktop/TFG'
#path_src <- 'N:/UDMTD16/code/src'
#path_data <- 'N:/UDMTD16/data'
#path_data <- 'N:/UDMTD/UDMTD16/data'
#path_src  <- 'N:/UDMTD/UDMTD16/code/src'
####  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: ####
####                  LOAD PACKAGES AND FUNCTIONS                           ####
library(data.table)
#library(pROC)
library(ggplot2)
#library(viridis) #customize ggplots
#library(gridExtra) #customize ggroc
library(latex2exp)
#library(ROCR)
####  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: ####
####                  READ RDS                                              ####
tru.dt <- readRDS(file = file.path(path_data, 'FF_2011.dt.rds'))
raw.dt <- readRDS(file = file.path(path_data, 'FG_2011.dt.rds'))
raw.dt[, cod := paste(CODSEC, VIV, HOGAR, NORDEN_ID, sep = "")]
tru.dt[, cod := paste(CODSEC, VIV, HOGAR, NORDEN_ID, sep = "")]
varNames_all    <- names(raw.dt)
varNames_ID     <- c('cod', 'CCAA', 'ESTRATO', "SEXOa", "EDADa", "PROXY_0")
varNames_target <- c( "F9", "F18", "F8_2", "F17a_2", "F17m_2", "F7_2",
"F16a_2", "F16m_2", "A10_i",
"CNO_Sub_AS", "CNO_SPl_AS", "CNO_GPl_AS",
"CNAE_Gru_AS", "CNAE_Div_AS", "CNAE_Sec_AS",
"SitProf_AS", "CLASE_AS", "A7_2a", "D28", "ACTIVa")
setnames(raw.dt, varNames_target, paste0(varNames_target, '_raw'))
tru.dt <- tru.dt[, c('cod', varNames_target)]
setnames(tru.dt, varNames_target, paste0(varNames_target, '_true'))
path_data <- 'N:/UDMTD/UDMTD16/data'
path_src  <- 'N:/UDMTD/UDMTD16/code/src'
####  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: ####
####                  LOAD PACKAGES AND FUNCTIONS                           ####
library(data.table)
#library(pROC)
library(ggplot2)
#library(viridis) #customize ggplots
#library(gridExtra) #customize ggroc
library(latex2exp)
#library(ROCR)
####  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: ####
####                  READ RDS                                              ####
tru.dt <- readRDS(file = file.path(path_data, 'FF_2011.dt.rds'))
raw.dt <- readRDS(file = file.path(path_data, 'FG_2011.dt.rds'))
raw.dt[, cod := paste(CODSEC, VIV, HOGAR, NORDEN_ID, sep = "")]
tru.dt[, cod := paste(CODSEC, VIV, HOGAR, NORDEN_ID, sep = "")]
varNames_all    <- names(raw.dt)
varNames_ID     <- c('cod', 'CCAA', 'ESTRATO', "SEXOa", "EDADa", "PROXY_0")
varNames_target <- c( "F9", "F18", "F8_2", "F17a_2", "F17m_2", "F7_2",
"F16a_2", "F16m_2", "A10_i",
"CNO_Sub_AS", "CNO_SPl_AS", "CNO_GPl_AS",
"CNAE_Gru_AS", "CNAE_Div_AS", "CNAE_Sec_AS",
"SitProf_AS", "CLASE_AS", "A7_2a", "D28", "ACTIVa")
setnames(raw.dt, varNames_target, paste0(varNames_target, '_raw'))
tru.dt <- tru.dt[, c('cod', varNames_target), with = FALSE]
setnames(tru.dt, varNames_target, paste0(varNames_target, '_true'))
View(raw.dt)
tru.dt <- readRDS(file = file.path(path_data, 'FF_2011.dt.rds'))
raw.dt <- readRDS(file = file.path(path_data, 'FG_2011.dt.rds'))
raw.dt[, cod := paste(CODSEC, VIV, HOGAR, NORDEN_ID, sep = "")]
tru.dt[, cod := paste(CODSEC, VIV, HOGAR, NORDEN_ID, sep = "")]
varNames_all    <- names(raw.dt)
varNames_ID     <- c('cod', 'CCAA', 'ESTRATO', "SEXOa", "EDADa", "PROXY_0")
varNames_target <- c( "F9", "F18", "F8_2", "F17a_2", "F17m_2", "F7_2",
"F16a_2", "F16m_2", "A10_i",
"CNO_Sub_AS", "CNO_SPl_AS", "CNO_GPl_AS",
"CNAE_Gru_AS", "CNAE_Div_AS", "CNAE_Sec_AS",
"SitProf_AS", "CLASE_AS", "A7_2a", "D28", "ACTIVa")
raw.dt <- raw.dt[, c('cod', varNames_ID, varNames_target), with = FALSE]
setnames(raw.dt, varNames_target, paste0(varNames_target, '_raw'))
tru.dt <- tru.dt[, c('cod', varNames_target), with = FALSE]
setnames(tru.dt, varNames_target, paste0(varNames_target, '_true'))
View(raw.dt)
tru.dt <- readRDS(file = file.path(path_data, 'FF_2011.dt.rds'))
raw.dt <- readRDS(file = file.path(path_data, 'FG_2011.dt.rds'))
raw.dt[, cod := paste(CODSEC, VIV, HOGAR, NORDEN_ID, sep = "")]
tru.dt[, cod := paste(CODSEC, VIV, HOGAR, NORDEN_ID, sep = "")]
varNames_all    <- names(raw.dt)
varNames_ID     <- c('cod', 'CCAA', 'ESTRATO', "SEXOa", "EDADa", "PROXY_0")
varNames_target <- c( "F9", "F18", "F8_2", "F17a_2", "F17m_2", "F7_2",
"F16a_2", "F16m_2", "A10_i",
"CNO_Sub_AS", "CNO_SPl_AS", "CNO_GPl_AS",
"CNAE_Gru_AS", "CNAE_Div_AS", "CNAE_Sec_AS",
"SitProf_AS", "CLASE_AS", "A7_2a", "D28", "ACTIVa")
raw.dt <- raw.dt[, c(varNames_ID, varNames_target), with = FALSE]
setnames(raw.dt, varNames_target, paste0(varNames_target, '_raw'))
tru.dt <- tru.dt[, c('cod', varNames_target), with = FALSE]
setnames(tru.dt, varNames_target, paste0(varNames_target, '_true'))
View(raw.dt)
View(tru.dt)
dat.dt <- merge(raw.dt, tru.dt, by = 'cod')
View(dat.dt)
target_vars <- c("CNO_AS", "CNAE_AS")
for (i in target_vars){
r <- paste(i, "_raw", sep = "")
t <- paste(i, "_true", sep = "")
targetName <- paste0('target_', i)
dat.dt[, (targetName) := ifelse(get(r) == get(t), 0, 1)]
}
target_vars <- c("CLASE_AS", "CNAE_Div_AS")
for (i in target_vars){
r <- paste(i, "_raw", sep = "")
t <- paste(i, "_true", sep = "")
targetName <- paste0('target_', i)
dat.dt[, (targetName) := ifelse(get(r) == get(t), 0, 1)]
}
View(dat.dt)
dat.dt
?psum
varNames_all
dat.dt[, target := ifelse(do.call(sum, target_vars) == 0, 0, 1)]
dat.dt[, target := ifelse(do.call(sum, as.list(target_vars)) == 0, 0, 1)]
#library(ROCR)
library(matrixStats)
paste0('target_', target_vars)
dat.dt[, target := rowSums2(.SD), .SDcols = paste0('target_', target_vars)]
dat.dt[, target := rowSums2(as.matrix(.SD)), .SDcols = paste0('target_', target_vars)]
dat.dt
tru.dt <- readRDS(file = file.path(path_data, 'FF_2011.dt.rds'))
raw.dt <- readRDS(file = file.path(path_data, 'FG_2011.dt.rds'))
raw.dt[, cod := paste(CODSEC, VIV, HOGAR, NORDEN_ID, sep = "")]
tru.dt[, cod := paste(CODSEC, VIV, HOGAR, NORDEN_ID, sep = "")]
varNames_all    <- names(raw.dt)
varNames_ID     <- c('cod', 'CCAA', 'ESTRATO', "SEXOa", "EDADa", "PROXY_0", 'FACTORADULTO')
varNames_target <- c( "F9", "F18", "F8_2", "F17a_2", "F17m_2", "F7_2",
"F16a_2", "F16m_2", "A10_i",
"CNO_Sub_AS", "CNO_SPl_AS", "CNO_GPl_AS",
"CNAE_Gru_AS", "CNAE_Div_AS", "CNAE_Sec_AS",
"SitProf_AS", "CLASE_AS", "A7_2a", "D28", "ACTIVa")
raw.dt <- raw.dt[, c(varNames_ID, varNames_target), with = FALSE]
setnames(raw.dt, varNames_target, paste0(varNames_target, '_raw'))
tru.dt <- tru.dt[, c('cod', varNames_target), with = FALSE]
setnames(tru.dt, varNames_target, paste0(varNames_target, '_true'))
dat.dt <- merge(raw.dt, tru.dt, by = 'cod')
regressors_vars <- c(setdiff(varNames_ID, 'cod'), varNames_target)
target_vars <- c("CLASE_AS", "CNAE_Div_AS")
for (i in target_vars){
r <- paste(i, "_raw", sep = "")
t <- paste(i, "_true", sep = "")
targetName <- paste0('target_', i)
dat.dt[, (targetName) := ifelse(get(r) == get(t), 0, 1)]
}
dat.dt[, target := (rowSums2(as.matrix(.SD)) > 0), .SDcols = paste0('target_', target_vars)]
dat.dt
dat.dt[, target := (rowSums2(as.matrix(.SD)) > 0) * 1L, .SDcols = paste0('target_', target_vars)]
dat.dt
dat.dt[
, target := (rowSums2(as.matrix(.SD)) > 0) * 1L, .SDcols = paste0('target_', target_vars)][
, c('target', regressors_vars), with = FALSE]
dat.dt[
, target := (rowSums2(as.matrix(.SD)) > 0) * 1L, .SDcols = paste0('target_', target_vars)]
data_rf.dt <- copy(raw.dt)[
, c(dat.dt$target, regressors_vars), with = FALSE]
data_rf.dt <- copy(raw.dt)[
, regressors_vars]
data_rf.dt <- copy(raw.dt)[
, ..regressors_vars]
regressors_vars <- c(setdiff(varNames_ID, 'cod'), paste0(varNames_target, '_raw'))
data_rf.dt <- copy(raw.dt)[
, ..regressors_vars]
data_rf.dt
data_rf.dt <- copy(raw.dt)[
, c('cod', 'target'), on = 'cod'][
, c('target', regressors_vars)]
data_rf.dt <- copy(raw.dt)[
dat.dt[, c('cod', 'target')], on = 'cod'][
, c('target', regressors_vars)]
data_rf.dt
View(data_rf.dt)
data_rf.dt <- copy(raw.dt)[
dat.dt[, c('cod', 'target')], on = 'cod'][
, c('target', regressors_vars), with = FALSE]
View(data_rf.dt)
rm(list = ls())
library(xml2)
library(openxlsx)
library(XML)
devtools::load_all(".")
rm(list = c(".N"))
devtools::load_all(".")
devtools::document(".")
devtools::load_all(".")
?xml2_example
?xml2
??xml2
?purrr:map_df
?purrr::map_df
?type:convert
?type.convert
type.convert('1')
class(type.convert('1'))
class(type.convert('1', as.is = TRUE))
xlsx <- read.xlsx(file.path(main_path, "E54088.NombresVariables_V1.xlsx"), sheet = 'VarSpec')
library(data.table)
library(XML)
library(xml2)
library(openxlsx)
library(devtools)
# library(fastReadfwf)
load_all(".")
main_path <- "N:/UDTMDCOM/SAS-GRID/EESE"
dataFilePath <- file.path(main_path, "datos_2020_individual/md_EESEadulto_2020.txt")
disRegPath   <- file.path(main_path, "datos_2020_individual/dr_EESEadulto_2020.xlsx")
t1 <- Sys.time()
xmlName <- file.path(main_path, "xmlEESE.xml")
schemaEESE.xml <- xlsxToXML(disRegPath, sheetToRead = "Diseño", xmlName = xmlName)
main_path <- "N:/UDMTD/UDTMDCOM/SAS-GRID/EESE"
dataFilePath <- file.path(main_path, "datos_2020_individual/md_EESEadulto_2020.txt")
disRegPath   <- file.path(main_path, "datos_2020_individual/dr_EESEadulto_2020.xlsx")
t1 <- Sys.time()
xmlName <- file.path(main_path, "xmlEESE.xml")
schemaEESE.xml <- xlsxToXML(disRegPath, sheetToRead = "Diseño", xmlName = xmlName)
schemaEESE.Schema <- xmlToSchema(xmlName)
t2 <- Sys.time()
datosEESE.dt <- fread_fwf(dataFilePath, schemaEESE.Schema, outFormat = "data.table")
t3 <- Sys.time()
t3-t2
t3-t1
xlsx <- read.xlsx(file.path(main_path, "E54088.NombresVariables_V1.xlsx"), sheet = 'VarSpec')
xlsx
Microdata <- read.xlsx(file.path(main_path, "E54088.NombresVariables_V1.xlsx"), sheet = 'Microdata')
Microdata <- read.xlsx(file.path(main_path, "E54088.NombresVariables_V1.xlsx"), sheet = 'MicroData')
Microdata
Microdata$UnitName
UnitNames <- Microdata$UnitName
names(datosEESE.dt)
VarNames  <- names(datosEESE.dt)
setdiff(VarNames, UnitNames)
setdiff(UnitNames, VarNames)
setdiff(VarNames, UnitNames)
Microdata <- read.xlsx(file.path(main_path, "E54088.NombresVariables_V1.xlsx"), sheet = 'MicroData')
UnitNames <- Microdata$UnitName
setdiff(VarNames, UnitNames)
Microdata <- read.xlsx(file.path(main_path, "E54088.NombresVariables_V1.xlsx"), sheet = 'MicroData')
UnitNames <- Microdata$UnitName
VarNames  <- names(datosEESE.dt)
VarNames
setdiff(VarNames, UnitNames)
'A10' %in% UnitNames
'A10' %in% VarNames
Microdata <- read.xlsx(file.path(main_path, "E54088.NombresVariables_V1.xlsx"), sheet = 'MicroData')
UnitNames <- Microdata$UnitName
setdiff(VarNames, UnitNames)
Microdata <- read.xlsx(file.path(main_path, "E54088.NombresVariables_V1.xlsx"), sheet = 'MicroData')
UnitNames <- Microdata$UnitName
setdiff(VarNames, UnitNames)
datosEESE.dt[1:5, CUADROS_DEPRESIVOS]
datosEESE.dt[1:10, CUADROS_DEPRESIVOS]
datosEESE.dt[1:10, SEVERIDAD_DEPRESIVA]
Microdata <- read.xlsx(file.path(main_path, "E54088.NombresVariables_V1.xlsx"), sheet = 'MicroData')
UnitNames <- Microdata$UnitName
setdiff(VarNames, UnitNames)
Microdata <- read.xlsx(file.path(main_path, "E54088.NombresVariables_V1.xlsx"), sheet = 'MicroData')
UnitNames <- Microdata$UnitName
setdiff(VarNames, UnitNames)
Microdata <- read.xlsx(file.path(main_path, "E54088.NombresVariables_V1.xlsx"), sheet = 'MicroData')
UnitNames <- Microdata$UnitName
setdiff(VarNames, UnitNames)
library(StQ)
library(RepoReadWrite)
DD <- RepoXLSToDD(file.path(main_path, "E54088.NombresVariables_V1.xlsx"))
datosEESE.StQ <- melt_StQ(datosEESE.dt, DD)
WriteRepoFile(file.path(main_path, 'E30188.FF_V1.AA2020.D_1'))
WriteRepoFile(datosEESE.StQ, file.path(main_path, 'E30188.FF_V1.AA2020.D_1'))
devtools::load_all(".")
path_root               <- "N:/UDMTD/UDTMDCOM/SAS-GRID/EESE"
EESE_AS__microdataName  <- file.path(main_path, "datos_2020_individual/md_EESEadulto_2020.txt")
EESE_AS_disRegName_xlsx <- file.path(main_path, "datos_2020_individual/dr_EESEadulto_2020.xlsx")
path_root               <- "N:/UDMTD/UDTMDCOM/SAS-GRID/EESE"
EESE_AS_microdataName   <- file.path(main_path, "datos_2020_individual/md_EESEadulto_2020.txt")
EESE_AS_disRegName_xlsx <- file.path(main_path, "datos_2020_individual/dr_EESEadulto_2020.xlsx")
EESE_AS_disRegName_tab  <- "Diseño"
EESE_AS_disRegName_xml  <- file.path(main_path, "datos_2020_individual/dr_EESEadulto_2020.xml")
EESE_AS_DD_xlsx         <- file.path(main_path, "datos_2020_individual/E54088.NombresVariables_V1.xlsx")
EESE_AS_FFName          <- file.path(main_path, "datos_2020_individual/E30188.FF_V1.AA2020.D_1")
#####                          :::::::::::::::                              ####
#####               CREAR StSCHEMA DEL DISEÑO DE REGISTRO                   ####
EESE_AS_stSchema_xml <- xlsxToXML(xlsxName    =EESE_AS_disRegName_xlsx,
sheetToRead = EESE_AS_disRegName_tab,
xmlName     = EESE_AS_disRegName_xml)
EESE_AS_stSchema.stSch <- xmlToSchema(EESE_AS_disRegName_xml)
#####                          :::::::::::::::                              ####
#####                    LEER MICRODATOS CON EL SCHEMA                     ####
EESE_AS_microdata.dt <- fread_fwf(EESE_AS_microdataName, EESE_AS_stSchema.stSch, outFormat = "data.table")
EESE_AS_DD            <- RepoXLSToDD(EESE_AS_DD_xlsx)
path_root               <- "N:/UDMTD/UDTMDCOM/SAS-GRID/EESE/datos_2020_individual/"
EESE_AS_microdataName   <- file.path(main_path, "md_EESEadulto_2020.txt")
EESE_AS_disRegName_xlsx <- file.path(main_path, "dr_EESEadulto_2020.xlsx")
EESE_AS_disRegName_tab  <- "Diseño"
EESE_AS_disRegName_xml  <- file.path(main_path, "dr_EESEadulto_2020.xml")
EESE_AS_DD_xlsx         <- file.path(main_path, "E54088.NombresVariables_V1.xlsx")
EESE_AS_FFName          <- file.path(main_path, "E30188.FF_V1.AA2020.D_1")
#####                          :::::::::::::::                              ####
#####               CREAR StSCHEMA DEL DISEÑO DE REGISTRO                   ####
EESE_AS_stSchema_xml <- xlsxToXML(xlsxName    =EESE_AS_disRegName_xlsx,
sheetToRead = EESE_AS_disRegName_tab,
xmlName     = EESE_AS_disRegName_xml)
path_root               <- "N:/UDMTD/UDTMDCOM/SAS-GRID/EESE/datos_2020_individual/"
EESE_AS_microdataName   <- file.path(path_root, "md_EESEadulto_2020.txt")
EESE_AS_disRegName_xlsx <- file.path(path_root, "dr_EESEadulto_2020.xlsx")
EESE_AS_disRegName_tab  <- "Diseño"
EESE_AS_disRegName_xml  <- file.path(path_root, "dr_EESEadulto_2020.xml")
EESE_AS_DD_xlsx         <- file.path(path_root, "E54088.NombresVariables_V1.xlsx")
EESE_AS_FFName          <- file.path(path_root, "E30188.FF_V1.AA2020.D_1")
#####                          :::::::::::::::                              ####
#####               CREAR StSCHEMA DEL DISEÑO DE REGISTRO                   ####
EESE_AS_stSchema_xml <- xlsxToXML(xlsxName    =EESE_AS_disRegName_xlsx,
sheetToRead = EESE_AS_disRegName_tab,
xmlName     = EESE_AS_disRegName_xml)
EESE_AS_stSchema.stSch <- xmlToSchema(EESE_AS_disRegName_xml)
#####                          :::::::::::::::                              ####
#####                    LEER MICRODATOS CON EL SCHEMA                     ####
EESE_AS_microdata.dt <- fread_fwf(EESE_AS_microdataName, EESE_AS_stSchema.stSch, outFormat = "data.table")
EESE_AS_DD            <- RepoXLSToDD(EESE_AS_DD_xlsx)
EESE_AS_microdata.StQ <- melt_StQ(EESE_AS_microdata.dt, EESE_AS_DD)
WriteRepoFile(datosEESE.StQ, file.path(main_path, EESE_AS_FFName))
WriteRepoFile(datosEESE.StQ, EESE_AS_FFName)
devtools::load_all(".")
devtools::document(".")
devtools::load_all(".")
devtools::document(".")
devtools::load_all(".")
devtools::document(".")
devtools::load_all(".")
devtools::document(".")
devtools::load_all(".")
devtools::document(".")
devtools::load_all(".")
devtools::document(".")
devtools::load_all(".")
devtools::document(".")
devtools::load_all(".")
devtools::document(".")
devtools::load_all(".")
xlsxName    <- file.path(system.file('data', package = 'fastReadfwf'), 'dr_EESEadulto_2020.xlsx')
xlsxName
xlsxName    <- file.path(system.file('inst/extdata', package = 'fastReadfwf'), 'dr_EESEadulto_2020.xlsx')
xlsxName
getwd()
xlsxName    <- file.path(system.file('inst/extdata', package = 'fastReadfwf'), 'dr_EESEadulto_2020.xlsx')
xmlName     <- file.path(system.file('data', package = 'fastReadfwf'), 'disreg_enceursalud20_a.xml')
sheetToRead <- 'Diseño'
INExlsxToXML(xlsxName = xlsxName, sheetToRead = sheetToRead, xmlName = xmlName)
xmlName
xlsxName    <- file.path(system.file('inst/extdata', package = 'fastReadfwf'), 'dr_EESEadulto_2020.xlsx')
xmlName     <- file.path(system.file('inst/extdata', package = 'fastReadfwf'), 'dr_EESEadulto_2020.xml')
sheetToRead <- 'Diseño'
INExlsxToXML(xlsxName = xlsxName, sheetToRead = sheetToRead, xmlName = xmlName)
devtools::load_all(".")
devtools::document(".")
devtools::load_all(".")
devtools::document(".")
devtools::load_all(".")
devtools::document(".")
devtools::load_all(".")
