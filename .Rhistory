devtools::load_all()
data.DT.converted
data("MicroDataSNHS")
MicroDataSNHS
MicroDataSNHS <- data.DT.converted
save(MicroDataSNHS, file='C:/Users/Administrador/Documents/R/fastReadfwf/data/MicroDataSNHS.rda')
rm(data.DT.converted)
devtools::build_vignettes()
library(testthat)
test_check("fastRead_fwf")
data("MicroDataSNHS")
dim(MicroDataSNHS)
devtools::document()
devtools::use_testthat()
devtools::test()
devtools::test()
class(data.table(1))
class(data.table(1))
devtools::test()
as_tibble(1)
as_tibble(c(1,2))
class(as_tibble(c(1,2)))
devtools::test()
devtools::test()
devtools::test()
devtools::test()
path <- system.file('extdata', package = 'fastReadfwf')
stSchema <- fastReadfwf::xlsxToSchema(file.path(path, 'SchemaSNHS.xlsx'), 'stSchema')
# For data.tables
data.DT <- fread_fwf(
file.path(path, 'MicroDataSNHS.txt'), stSchema, outFormat = 'data.table', perl = TRUE)
data.DT
dim(data.DT)
devtools::test()
devtools::test()
devtools::test(reporter = "summary")
usethis::use_r()
usethis::use_test()
?use_test()
usethis::use_test("fread_fwf")
?use_test()
usethis::use_test()
devtools::test(reporter = "summary")
usethis::use_test()
usethis::use_test()
usethis::use_test()
usethis::use_test()
devtools::test(reporter = "summary")
devtools::test(reporter = "summary")
devtools::test()
usethis::use_test()
path <- system.file('extdata', package = 'fastReadfwf')
schema <- csvToSchema(file.path(path, 'SchemaSNHS_microdataWeb.csv'), header = TRUE)
class(schema)
devtools::test()
?setChar
a <- rep(1, 10)
b <- rep("a", 10)
DT <- data.table(a, b)
DT
DT.char <- setChar(DT)
DT.char
str(DT.char)
is.character(DT.char$a)
c <- c(125:134)
DT <- data.table(a, b, c)
DT.char <- setChar(DT)
devtools::test()
path <- system.file('extdata', package = 'fastReadfwf')
stSchema <- fastReadfwf::xlsxToSchema(file.path(path, 'SchemaSNHS.xlsx'), 'stSchema')
# For data.tables
data.DT.char <- fread_fwf(
file.path(path, 'MicroDataSNHS.txt'), stSchema, validate = FALSE, convert = FALSE,
outFormat = 'data.table', perl = TRUE)
data.DT.types <- setTypes(data.DT.char, stSchema)
str(data.DT.types)
devtools::test()
devtools::test()
# For data.tables
data <- fread_fwf(
file.path(path, 'MicroDataSNHS.txt'), stSchema, outFormat = 'data.table', perl = TRUE)
validateValues(data, stSchema, perl = TRUE)
str(data)
schema
data$F19a_2[1:5]
data$F19a_2[1] <- '490'
resultVal <- validateValues(data, stSchema, perl = TRUE)
data$F19a_2[1]
names(schema)
schema[[Ã›1]]
schema[[1]]
schema@df$variable
schema@df$valueRegEx
schema@df$valueRegEx[38]
schema@df$valueRegEx[1:5]
schema@df$variable[1:5]
data$SEXOa <- "3"
resultVal <- validateValues(data, stSchema, perl = TRUE)
# For data.tables
data <- fread_fwf(
file.path(path, 'MicroDataSNHS.txt'), stSchema, outFormat = 'data.table', perl = TRUE)
data$SEXOa[1:10] <- "3"
resultVal <- validateValues(data, stSchema, perl = TRUE)
resultVal2 <- validateValues(data, stSchema, perl = TRUE)
resultVal2
resultVal
resultVal2 <- try(validateValues(data, stSchema, perl = TRUE))
resultVal2
?expect_error
devtools::test()
devtools::test()
?expect_error
devtools::test()
devtools::test()
?validateValues
validateValues
validateValues(data, stSchema, perl = TRUE, verbose = FALSE)
resultVal2 <- validateValues(data, stSchema, perl = TRUE)
capture.output(validateValues(data, stSchema, perl = TRUE))
resultVal2 <- capture.output(validateValues(data, stSchema, perl = TRUE))
resultVal2
devtools::test()
capture.output(resultVal <- validateValues(data, stSchema, perl = TRUE))
# For data.tables
data <- fread_fwf(
file.path(path, 'MicroDataSNHS.txt'), stSchema, outFormat = 'data.table', perl = TRUE)
capture.output(resultVal <- validateValues(data, stSchema, perl = TRUE))
a <- capture.output(resultVal <- validateValues(data, stSchema, perl = TRUE))
rm("resultVal")
a <- capture.output(resultVal <- validateValues(data, stSchema, perl = TRUE))
resultVal
devtools::test()
devtools::test()
?iconv
devtools::test()
devtools::document()
devtools::load_all()
devtools::test()
